// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address, a=outloadmuxa, b=outloadmuxb, c=outloadmuxc, d=outloadmuxd, e=outloadmuxe, f=outloadmuxf, g=outloadmuxg, h=outloadmuxh);
    Register(in=in, out=outreg0, load=outloadmuxa);
    Register(in=in, out=outreg1, load=outloadmuxb);
    Register(in=in, out=outreg2, load=outloadmuxc);
    Register(in=in, out=outreg3, load=outloadmuxd);
    Register(in=in, out=outreg4, load=outloadmuxe);
    Register(in=in, out=outreg5, load=outloadmuxf);
    Register(in=in, out=outreg6, load=outloadmuxg);
    Register(in=in, out=outreg7, load=outloadmuxh);
    Mux8Way16(a=outreg0, b=outreg1, c=outreg2, d=outreg3, e=outreg4, f=outreg5, g=outreg6, h=outreg7, sel=address, out=out);
}