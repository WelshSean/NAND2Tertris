// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address[0..2], a=outloadmuxa, b=outloadmuxb, c=outloadmuxc, d=outloadmuxd, e=outloadmuxe, f=outloadmuxf, g=outloadmuxg, h=outloadmuxh);
    RAM512(in=in, load=outloadmuxa, address=address[3..11], out=outRAM512a);
    RAM512(in=in, load=outloadmuxb, address=address[3..11], out=outRAM512b);
    RAM512(in=in, load=outloadmuxc, address=address[3..11], out=outRAM512c);
    RAM512(in=in, load=outloadmuxd, address=address[3..11], out=outRAM512d);
    RAM512(in=in, load=outloadmuxe, address=address[3..11], out=outRAM512e);
    RAM512(in=in, load=outloadmuxf, address=address[3..11], out=outRAM512f);
    RAM512(in=in, load=outloadmuxg, address=address[3..11], out=outRAM512g);
    RAM512(in=in, load=outloadmuxh, address=address[3..11], out=outRAM512h);
    Mux8Way16(a=outRAM512a, b=outRAM512b, c=outRAM512c, d=outRAM512d, e=outRAM512e, f=outRAM512f, g=outRAM512g, h=outRAM512h, sel=address[0..2], out=out);
}